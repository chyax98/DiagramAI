# ============================================
# L3 类型层 - Mermaid Journey v1.0.0
# ============================================

[meta]
level = "L3"
language = "mermaid"
diagram_type = "journey"
version = "1.0.0"
description = "L3: mermaid - 用户旅程图 图表生成规范"
author = "DiagramAI Team"
created_at = "2025-10-19"
updated_at = "2025-10-19"

# 可选元数据
complexity = "medium"
target_length = 2800
use_cases = ["用户体验设计", "客户旅程分析", "服务流程优化", "情感曲线可视化"]

# ============================================
# Section 1: D 角色定义 (Role Definition)
# ============================================

[D_role]
additional_roles = [
  "用户体验 (UX) 设计师 - 精通用户旅程映射和体验优化",
  "客户旅程分析师 - 擅长分析客户接触点和情感变化",
  "服务设计专家 - 理解服务流程中的用户痛点和峰值体验"
]

# ============================================
# Section 2: E 约束条件 (Constraints)
# ============================================

[E_constraints]
items = [
  """
  **Journey 语法**: 必须使用 `journey` 关键字开始:
  - 第一行直接写 `journey`
  - 接下来是 `title` 声明旅程标题
  - 然后是 `section` 和任务定义
  - 格式: `任务名称: 满意度评分: 参与角色1, 参与角色2`
  """,

  """
  **标题定义**: 必须有清晰的旅程标题:
  - 使用 `title` 关键字声明标题（第二行）
  - 标题简洁明了，描述用户旅程的主题（≤ 30 字符）
  - 示例: `title 在线购物用户旅程`, `title 客户服务体验流程`
  - 标题不能为空，且只能有一个
  """,

  """
  **阶段分组 (Section)**: 使用 `section` 对旅程阶段进行分组:
  - 每个旅程至少包含 2 个阶段
  - 阶段名称应反映用户旅程的关键步骤（如 "发现", "购买", "使用"）
  - 阶段按时间顺序排列
  - 每个阶段包含 2-5 个任务
  """,

  """
  **任务定义格式**: 每个任务必须包含三个部分:
  - **任务名称**: 描述用户在该步骤的行为（如 "浏览商品", "填写订单"）
  - **满意度评分**: 1-5 的整数，表示用户情感（1=非常不满，5=非常满意）
  - **参与角色**: 负责该任务的角色（用逗号分隔多个角色）
  - 格式: `任务名称: 评分: 角色1, 角色2`
  """,

  """
  **满意度评分规范**: 评分必须合理且有区分度:
  - 评分范围: 1-5（整数）
  - 评分含义:
    - 5 分: 非常满意，峰值体验
    - 4 分: 满意，体验良好
    - 3 分: 一般，无明显情感
    - 2 分: 不满意，存在痛点
    - 1 分: 非常不满意，严重问题
  - 避免所有任务都是相同评分（无意义）
  - 使用评分曲线展示用户情感起伏
  """,

  """
  **角色定义**: 参与角色必须清晰且一致:
  - 角色名称语义化（如 "用户", "客服", "系统", "商家"）
  - 同一角色的命名必须一致（避免 "用户" 和 "客户" 混用）
  - 每个任务至少有一个参与角色
  - 角色数量 ≤ 5 个（过多会导致图例混乱）
  """,

  """
  **旅程完整性**: 旅程必须覆盖完整的用户体验流程:
  - 包含用户体验的开始、过程和结束
  - 识别关键接触点和决策点
  - 包含用户的痛点（低评分）和峰值体验（高评分）
  - 任务数量 ≥ 5 个（建议 8-12 个）
  """,

  """
  **Kroki 渲染兼容性**: 注意 Mermaid Journey 的限制:
  - 任务名称避免使用特殊字符（冒号需用文字描述）
  - 角色名称使用中文或简单英文（避免复杂符号）
  - 阶段数量 ≤ 6 个（过多会导致图形过长）
  - 每个阶段的任务数量 ≤ 5 个（保持可读性）
  """
]

# ============================================
# Section 3: P 流程规范 (Process)
# ============================================

[P_process]
items = [
  """
  **1. 识别用户旅程结构**:
  - **目标用户**: 确定旅程的主要用户角色（如 "在线购物者", "求职者"）
  - **旅程目标**: 用户希望达成的目标（如 "购买商品", "找到工作"）
  - **关键阶段**: 旅程的主要步骤（如 "发现-考虑-购买-使用"）
  - **接触点**: 用户与产品/服务的交互点
  - **参与角色**: 除了用户外的其他参与方（客服、系统、第三方等）
  """,

  """
  **2. 提取旅程阶段和任务**:
  - 将旅程划分为 2-6 个逻辑阶段（section）
  - 每个阶段包含 2-5 个用户任务
  - 任务按时间顺序排列（从早到晚）
  - 识别每个任务的参与角色
  - 任务名称使用动词开头（如 "浏览", "对比", "支付"）
  """,

  """
  **3. 评估用户情感和满意度**:
  - 为每个任务分配 1-5 分的满意度评分
  - 识别用户的痛点（评分 1-2 分）
  - 识别用户的峰值体验（评分 4-5 分）
  - 确保评分有起伏，真实反映用户情感变化
  - 避免所有任务都是 3 分或 5 分（不真实）
  """,

  """
  **4. 构建旅程代码结构**:
  - 第一行: `journey`
  - 第二行: `title 旅程标题`
  - 接下来: 按阶段组织任务
    - `section 阶段名称`
    - `任务1: 评分: 角色1, 角色2`
    - `任务2: 评分: 角色1`
  - 确保格式正确（冒号、逗号、缩进）
  """,

  """
  **5. 优化旅程可读性和洞察力**:
  - 阶段名称清晰，反映旅程的自然流程
  - 任务名称简洁，易于理解（≤ 20 字符）
  - 评分曲线有起伏，突出痛点和峰值体验
  - 参与角色合理，真实反映协作关系
  - 旅程长度适中（8-12 个任务），不过于简单或复杂
  """
]

# ============================================
# Section 4: H 质量标准 (Quality Standards)
# ============================================

[H_quality]
items = [
  """
  **旅程结构完整性**:
  - 必须有标题（`title`）和至少 2 个阶段（`section`）
  - 每个阶段至少包含 2 个任务
  - 任务格式正确: `任务名称: 评分: 角色1, 角色2`
  - 覆盖用户体验的完整流程（开始-过程-结束）
  """,

  """
  **满意度评分合理性**:
  - 所有评分在 1-5 范围内（整数）
  - 评分有区分度，不是所有任务都相同评分
  - 评分曲线有起伏，反映真实的用户情感变化
  - 痛点（低评分）和峰值体验（高评分）明确
  - 评分与任务性质匹配（如 "遇到错误" 应为低评分）
  """,

  """
  **角色定义清晰度**:
  - 角色名称语义化且一致（如 "用户", "客服", "系统"）
  - 同一角色的命名统一（避免 "用户" 和 "客户" 混用）
  - 每个任务至少有一个参与角色
  - 角色数量 ≤ 5 个（避免图例过于复杂）
  - 角色职责清晰，与任务相关
  """,

  """
  **旅程洞察力和实用性**:
  - 阶段划分合理，反映旅程的自然流程
  - 任务名称清晰，使用动词描述用户行为
  - 识别关键接触点和决策点
  - 突出用户痛点（优化机会）
  - 突出峰值体验（保持和增强的优势）
  - 旅程长度适中（8-12 个任务），有足够的细节但不过于复杂
  """
]
