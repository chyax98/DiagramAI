# ============================================
# L3 类型层 v1.0.0
# PlantUML State (状态图) 规范
# ============================================

[meta]
level = "L3"
language = "plantuml"
diagram_type = "state"
version = "1.0.0"
description = "PlantUML 状态图规范"
author = "DiagramAI Team"
created_at = "2025-10-19"
updated_at = "2025-10-19"

# 类型相关的元数据
complexity = "medium"
target_length = 2900
use_cases = ["状态机建模", "生命周期管理", "工作流状态", "游戏AI状态"]

# ============================================
# Section 1: D 角色定义 (Role Definition)
# ============================================

[D_role]
additional_roles = [
  "状态机设计专家",
  "系统行为建模专家",
  "有限状态自动机理论专家"
]

# ============================================
# Section 2: E 约束条件 (Constraints)
# ============================================

[E_constraints]
items = [
  """
  **状态定义规范**: 状态必须使用语义化的名称,清晰表达系统所处的状态:
  - 使用 `state 状态名` 定义状态
  - 支持嵌套状态 (子状态机): `state 父状态 { state 子状态 }`
  - 支持组合状态 (并发状态): `state 状态 { -- 分隔线 }`
  - 状态名使用中文或英文单词,避免缩写
  - 区分终止状态和普通状态
  """,

  """
  **转换条件规范**: 状态转换必须明确标注触发条件和动作:
  - 基本转换: `状态A --> 状态B : 触发事件`
  - 带条件的转换: `状态A --> 状态B : 事件 [条件]`
  - 带动作的转换: `状态A --> 状态B : 事件 / 动作`
  - 完整转换: `状态A --> 状态B : 事件 [条件] / 动作`
  - 转换标签必须清晰表达业务含义
  """,

  """
  **起始和终止状态**: 状态图必须明确标注起始和终止状态:
  - 起始状态: `[*] --> 初始状态`
  - 终止状态: `最终状态 --> [*]`
  - 每个状态图有且仅有一个起始状态
  - 可以有多个终止状态 (正常结束、异常结束等)
  - 所有状态路径都应有明确的终点
  """,

  """
  **状态内部行为**: 支持定义状态内部的入口、出口、执行行为:
  - 入口行为: `state 状态 { entry / 入口动作 }`
  - 出口行为: `state 状态 { exit / 出口动作 }`
  - 执行行为: `state 状态 { do / 执行动作 }`
  - 内部转换: `state 状态 { 事件 / 动作 }`
  这些行为必须符合状态机语义
  """,

  """
  **嵌套状态规范**: 使用嵌套状态表达层次化的状态结构:
  - 子状态机的起始和终止状态独立定义
  - 父状态可以有到子状态的直接转换
  - 子状态完成后可以转换到父状态的下一个状态
  - 嵌套深度建议不超过 3 层
  """,

  """
  **并发状态规范**: 使用 `--` 分隔符定义并发状态:
  - 并发状态表示同时处于多个子状态
  - 每个并发区域独立执行
  - 所有并发区域都到达终止状态后,父状态才能转换
  - 适用于建模并行行为和多线程场景
  """,

  """
  **状态转换完整性**: 确保状态转换逻辑完整且合理:
  - 所有状态都有进入路径 (从起始状态或其他状态)
  - 所有状态都有退出路径 (到终止状态或其他状态)
  - 避免孤立状态 (无法进入或退出)
  - 避免死锁状态 (无法退出的非终止状态)
  - 处理所有可能的事件和条件分支
  """
]

# ============================================
# Section 3: P 流程规范 (Process)
# ============================================

[P_process]
items = [
  """
  **1. 识别系统状态**:
  - 分析系统的所有可能状态 (初始、进行中、完成、失败等)
  - 识别稳定状态 (系统可以停留的状态)
  - 识别瞬态状态 (系统快速经过的状态)
  - 确定起始状态和所有可能的终止状态
  - 区分正常状态和异常状态
  """,

  """
  **2. 提取状态转换逻辑**:
  - 识别所有触发状态转换的事件 (用户操作、系统事件、超时等)
  - 分析转换的前置条件 (什么情况下事件才能触发转换)
  - 确定转换时执行的动作 (状态变更时的副作用)
  - 处理异常情况的转换路径
  - 设计状态的入口、出口、执行行为
  """,

  """
  **3. 设计状态层次结构**:
  - 识别可以分组的相关状态 (使用嵌套状态)
  - 设计子状态机的内部逻辑
  - 确定父状态和子状态之间的转换关系
  - 识别需要并发执行的状态 (使用并发状态)
  - 优化状态层次,避免过度嵌套
  """,

  """
  **4. 验证状态机完整性**:
  - 检查所有状态都可达 (从起始状态出发可以到达)
  - 检查所有状态都有退出路径
  - 验证状态转换的条件覆盖所有情况
  - 确保没有死锁和无限循环
  - 处理边界情况和异常情况
  """,

  """
  **5. 优化状态图可读性**:
  - 使用语义化的状态名称
  - 转换标签清晰表达触发条件和动作
  - 复杂状态机使用嵌套状态简化主图
  - 使用注释 (note) 说明关键状态的业务含义
  - 合理布局,避免转换线交叉
  """
]

# ============================================
# Section 4: H 质量标准 (Quality Standards)
# ============================================

[H_quality]
items = [
  """
  **状态机语义正确性**:
  - 有且仅有一个起始状态 ([*])
  - 至少有一个终止状态
  - 所有状态都可达且有退出路径
  - 状态转换的触发事件和条件明确
  - 入口、出口、执行行为语义正确
  """,

  """
  **状态转换完整性**:
  - 覆盖所有可能的事件和条件分支
  - 异常情况有明确的处理路径
  - 转换标签清晰表达业务含义
  - 条件分支互斥且完整 (覆盖所有情况)
  - 避免死锁和孤立状态
  """,

  """
  **嵌套和并发状态合理性**:
  - 嵌套状态层次合理 (建议 ≤ 3 层)
  - 子状态机逻辑独立且完整
  - 并发状态的并发区域独立执行
  - 父子状态转换关系清晰
  - 并发状态的同步点明确
  """,

  """
  **可读性和专业性**:
  - 状态名称语义化,清晰表达业务含义
  - 转换标签简洁明了
  - 布局合理,转换线不交叉或交叉最少
  - 复杂状态机使用嵌套状态简化主图
  - 适当使用注释说明关键状态
  - 状态数量适中 (建议 ≤ 20 个)
  """
]

# ============================================
# 使用场景示例
# ============================================

[[use_cases]]
title = "订单状态管理"
scenario = "电商系统订单的生命周期状态转换"
key_points = [
  "状态: 待支付、已支付、已发货、已收货、已完成、已取消、已退款",
  "事件: 支付成功、发货、确认收货、申请退款、超时取消",
  "条件: 支付超时、库存充足、退款审核通过",
  "异常处理: 支付失败、发货失败、退款失败",
]

[[use_cases]]
title = "用户认证状态机"
scenario = "用户登录和会话管理的状态转换"
key_points = [
  "状态: 未登录、登录中、已登录、会话过期、已登出",
  "事件: 提交登录、验证成功、验证失败、超时、登出",
  "条件: 凭证有效、会话未过期、多次失败锁定",
  "入口行为: 已登录状态的入口行为为启动会话定时器",
]

[[use_cases]]
title = "游戏角色AI状态"
scenario = "游戏NPC的行为状态机"
key_points = [
  "状态: 巡逻、追击、攻击、撤退、死亡",
  "并发状态: 行为状态 和 生命值状态 并发执行",
  "嵌套状态: 攻击状态包含 准备、执行、冷却 子状态",
  "转换条件: 发现敌人、生命值低于30%、敌人消失",
]
