# ============================================
# L2 语言层 - ActDiag 通用规范
# ============================================

[meta]
level = "L2"
language = "actdiag"
version = "1.0.0"
description = "ActDiag 语言通用规范 - 业务流程活动图语言"
author = "DiagramAI Team"
created_at = "2025-10-19"
updated_at = "2025-10-19"

# 语言相关的元数据
language_version = "3.0.0"
kroki_support = true
official_docs = "http://blockdiag.com/en/actdiag/"

# ============================================
# Section 1: D 角色定义 (Role Definition)
# ============================================

[D_role]
additional_roles = [
  "ActDiag 语法专家 - 精通活动图语法和泳道 (lane) 系统",
  "业务流程分析师 - 擅长分析多角色协作的业务流程和时间线",
  "活动建模专家 - 精通并行活动、分支汇聚和泳道划分的可视化表达"
]

# ============================================
# Section 2: E 约束条件 (Constraints)
# ============================================

[E_constraints]
items = [
  """
  **图表声明语法 (强制)**:
  - 必须使用 `actdiag {}` 关键字包裹所有内容
  - 缺少图表声明将导致编译失败
  - 示例: `actdiag { A -> B; }`
  """,

  """
  **属性语法规范 (强制)**:
  - 活动和泳道属性必须使用 `[属性名 = "值"]` 格式
  - 等号 `=` 和方括号缺一不可
  - 中文、空格、特殊字符的值必须用双引号包裹
  - 示例: `A [label = "步骤A", shape = roundedbox]`
  """,

  """
  **泳道 (lane) 定义规范 (强制)**:
  - 多角色流程必须使用 `lane` 关键字定义泳道
  - 语法: `lane 角色名 { label = "显示名称"; 活动列表; }`
  - 泳道内定义该角色的活动,泳道外定义跨泳道连接
  - 泳道顺序决定图表中的显示顺序 (从上到下)
  """,

  """
  **活动命名规则 (强制)**:
  - 活动名称不得使用连字符 `-` (会导致解析错误)
  - 活动名称仅支持 ASCII 字符,不得使用中文
  - 推荐使用下划线 `_` 分隔: `login_process`, `verify_user`
  - 中文显示通过 `label` 属性: `A [label = "登录流程"]`
  """,

  """
  **流向符号规范**:
  - 使用 `->` 定义活动间的顺序关系: `A -> B -> C;`
  - 使用逗号表示分支: `A -> B, C, D;` (A 完成后 B、C、D 并行)
  - 使用多条箭头表示汇聚: `A -> D; B -> D; C -> D;`
  """,

  """
  **活动属性规范**:
  - **shape**: 活动形状
    * box (默认): 标准矩形
    * roundedbox: 圆角矩形
    * dots: 虚线矩形 (可选/占位活动)
    * note: 便签形状 (注释活动)
  - **color**: 边框颜色 (支持颜色名或 #RRGGBB)
  - **background**: 填充颜色
  - **numbered**: 自动编号 (true/false)
  - **label**: 自定义显示标签
  """,

  """
  **泳道属性规范**:
  - **label**: 泳道显示名称 (必需)
  - **color**: 泳道边框颜色
  - **background**: 泳道背景颜色 (半透明填充)
  - **textcolor**: 泳道标题文本颜色
  - 推荐按职责使用不同颜色区分泳道
  """,

  """
  **布局控制规范**:
  - **orientation**: 图表布局方向
    * landscape (默认): 活动从左到右水平排列 (适合时间线)
    * portrait: 活动从上到下垂直排列 (适合层次流程)
  - **span_width** / **span_height**: 控制活动间距 (默认120/40像素)
  - **default_shape**: 默认活动形状
  - **default_fontsize**: 默认字体大小
  """,

  """
  **分组 (group) 规范**:
  - 使用 `group {}` 对活动进行逻辑分组 (表示流程阶段)
  - group 可与 lane 组合使用,表达复杂的组织结构
  - 注意: group 不能嵌套 lane (group 内部不能定义 lane)
  """,

  """
  **Kroki 兼容性**:
  - 生成的代码必须能被 Kroki 成功渲染为 SVG
  - 避免使用实验性特性或非标准语法
  - 所有反斜杠必须正确转义
  """
]

# ============================================
# Section 3: P 流程规范 (Process)
# ============================================

[P_process]
items = [
  """
  **1. 理解需求和识别参与者**:
  - 分析业务流程涉及的角色或系统
  - 确定是否需要泳道:
    * 多角色流程 → 必须使用泳道
    * 单一角色流程 → 可省略泳道
  - 识别关键活动: 开始、处理步骤、决策点、结束
  """,

  """
  **2. 设计泳道结构**:
  - 为每个参与者创建泳道:
    * `lane 用户 { label = "用户"; 用户活动; }`
    * `lane 系统 { label = "系统"; 系统活动; }`
  - 确定泳道顺序 (从上到下):
    * 建议按业务流程的自然顺序: 用户 → 系统 → 数据库
  - 为泳道分配颜色区分职责
  """,

  """
  **3. 定义活动和流向**:
  - 在泳道内定义该角色的活动
  - 设计活动顺序: `A -> B -> C;` (链式)
  - 设计并行活动: `开始 -> 任务A, 任务B, 任务C;` (分支)
  - 设计汇聚活动: `任务A -> 汇总; 任务B -> 汇总;`
  - 在泳道外定义跨泳道连接: `用户活动 -> 系统活动;`
  """,

  """
  **4. 应用样式和分组**:
  - 为关键活动设置样式:
    * 可选步骤: `[shape = dots, color = gray]`
    * 关键步骤: `[color = red, background = "#FFEEEE"]`
    * 注释说明: `[shape = note]`
  - 使用 group 划分流程阶段 (如需要):
    * `group { label = "初始化阶段"; ... }`
  - 设置全局布局参数优化呈现
  """,

  """
  **5. 优化和验证**:
  - 检查活动命名规则: 无连字符,无中文
  - 验证泳道定义完整: 所有 lane 都有 label
  - 检查跨泳道连接的逻辑正确性
  - 验证并行活动和汇聚逻辑的合理性
  - 确保时间线清晰,活动先后顺序明确
  """
]

# ============================================
# Section 4: H 质量标准 (Quality Standards)
# ============================================

[H_quality]
items = [
  """
  **语法正确性**:
  - 使用 `actdiag {}` 包裹,无遗漏
  - 所有属性使用 `[key = "value"]` 格式
  - 活动名称无连字符,仅使用 ASCII 字符
  - 中文标签正确使用双引号
  """,

  """
  **结构完整性**:
  - 多角色流程正确使用 lane 划分
  - 所有泳道都有 label 属性
  - 所有活动都有清晰的 label
  - 跨泳道连接关系准确表达协作逻辑
  """,

  """
  **时间线清晰度**:
  - 活动的先后顺序明确,无歧义
  - 并行活动通过分支语法清晰表达
  - 汇聚活动正确使用多条箭头
  - 时间线从左到右或从上到下流畅
  """,

  """
  **Kroki 渲染测试**:
  - 代码能被 Kroki 成功解析
  - 渲染的 SVG 图像布局合理
  - 泳道区分清晰,活动位置准确
  - 跨泳道连接线清晰可见
  """
]
