# ============================================
# L3 类型层 - Mermaid Mindmap v1.0.0
# ============================================

[meta]
level = "L3"
language = "mermaid"
diagram_type = "mindmap"
version = "1.0.0"
description = "Mermaid 思维导图规范 - 展示概念层级"
author = "DiagramAI Team"
created_at = "2025-10-19"
updated_at = "2025-10-19"

# 可选元数据
complexity = "medium"
target_length = 2600
use_cases = ["知识体系梳理", "项目规划分解", "头脑风暴整理", "学习笔记组织"]

# ============================================
# Section 1: D 角色定义 (Role Definition)
# ============================================

[D_role]
additional_roles = [
  "思维导图设计专家 - 精通概念层级和发散思维表达",
  "Mermaid Mindmap 工程师 - 掌握节点缩进、图标和样式配置"
]

# ============================================
# Section 2: E 约束条件 (Constraints)
# ============================================

[E_constraints]
items = [
  """
  **思维导图声明**: 必须使用 `mindmap` 关键字开始思维导图,并定义根节点:
  - 第一行: `mindmap`
  - 第二行: 根节点内容 (顶层主题)
  - 示例:
    ```
    mindmap
      root((项目规划))
    ```
  """,

  """
  **节点层级规范**: 使用缩进 (2 个空格) 表示层级关系:
  - 根节点: 无缩进
  - 一级子节点: 2 个空格缩进
  - 二级子节点: 4 个空格缩进
  - 三级子节点: 6 个空格缩进
  - 建议最大层级深度 ≤ 4 层 (避免过于复杂)
  - 禁止使用 Tab 缩进,只能使用空格
  """,

  """
  **节点形状语法**: 使用特定符号定义节点形状:
  - 圆角矩形 (默认): `节点文本`
  - 圆形: `((节点文本))`
  - 圆角矩形: `(节点文本)`
  - 矩形: `[节点文本]`
  - 云形: `)节点文本(`
  - 爆炸形: `))节点文本((`
  - 六边形: `{{节点文本}}`
  - 根节点建议使用圆形或云形,子节点使用圆角矩形或矩形
  """,

  """
  **节点内容规范**: 节点文本应简洁明了:
  - 长度建议 ≤ 20 个中文字符或 40 个英文字符
  - 使用关键词或短语,避免完整句子
  - 避免使用特殊字符 (如 `#`, `::`, `---` 等 Markdown 标记)
  - 节点文本不需要双引号包裹
  """,

  """
  **层级结构合理性**: 思维导图应有清晰的层级结构:
  - 根节点: 1 个 (核心主题)
  - 一级子节点: 3-7 个 (主要分支)
  - 二级子节点: 每个一级节点下 2-5 个
  - 三级及以下: 适度展开,避免过于分散
  - 同级节点数量 ≤ 7 个 (符合认知规律)
  """,

  """
  **图标使用 (可选)**: 可为节点添加图标增强表达:
  - 语法: `::icon(图标名称)`
  - 图标名称来自 Font Awesome
  - 示例: `任务管理::icon(fa fa-tasks)`
  - 避免过度使用图标 (每 3-5 个节点使用 1 个)
  """,

  """
  **缩进一致性**: 同级节点必须保持相同的缩进:
  - 同级节点的空格数必须完全一致
  - 子节点缩进必须比父节点多 2 个空格
  - 缩进错误会导致层级混乱或解析失败
  - 使用文本编辑器的 "显示空格" 功能检查
  """,

  """
  **分支平衡性**: 各主要分支应相对平衡:
  - 避免某个分支过于庞大 (节点数 > 其他分支总和)
  - 避免某个分支过于单薄 (只有 1 个子节点)
  - 建议每个一级节点下有 2-5 个二级节点
  - 如果某个分支过大,考虑拆分为多个一级节点
  """
]

# ============================================
# Section 3: P 流程规范 (Process)
# ============================================

[P_process]
items = [
  """
  **1. 识别核心主题**:
  - 从用户描述中提取核心概念或目标
  - 确定思维导图的根节点 (中心主题)
  - 根节点应概括整个导图的主题
  - 选择合适的节点形状 (建议圆形或云形)
  """,

  """
  **2. 提取主要分支**:
  - 识别核心主题的主要组成部分或维度
  - 每个主要部分作为一级子节点
  - 一级子节点数量建议 3-7 个
  - 一级节点应覆盖主题的主要方面,避免遗漏
  """,

  """
  **3. 展开子层级**:
  - 对每个一级节点进行细化和分解
  - 提取二级子节点 (每个一级节点下 2-5 个)
  - 根据需要继续展开三级、四级节点
  - 保持层级深度 ≤ 4 层
  - 同级节点之间应有逻辑关联 (并列、递进、分类等)
  """,

  """
  **4. 优化节点表达**:
  - 使用简洁的关键词或短语
  - 节点文本长度控制在合理范围
  - 为重要节点选择合适的形状 (圆形、矩形、六边形等)
  - 可为部分节点添加图标增强表达
  - 确保缩进正确 (每层级 +2 个空格)
  """,

  """
  **5. 平衡和完善**:
  - 检查各主要分支是否平衡 (节点数量相对均衡)
  - 确认层级结构清晰,无混乱或错位
  - 验证同级节点数量 ≤ 7 个
  - 检查节点文本简洁性和准确性
  - 确保缩进一致性 (使用 2 个空格,不用 Tab)
  """
]

# ============================================
# Section 4: H 质量标准 (Quality Standards)
# ============================================

[H_quality]
items = [
  """
  **语法正确性**:
  - 使用 `mindmap` 声明
  - 根节点正确定义 (无缩进)
  - 缩进使用 2 个空格 (不使用 Tab)
  - 节点形状语法正确 (如 `((文本))`, `[文本]`)
  - 图标语法正确 (如 `::icon(fa fa-tasks)`)
  """,

  """
  **层级结构合理性**:
  - 根节点: 1 个
  - 一级子节点: 3-7 个
  - 二级子节点: 每个一级节点下 2-5 个
  - 层级深度 ≤ 4 层
  - 同级节点缩进一致
  - 子节点缩进比父节点多 2 个空格
  """,

  """
  **内容质量**:
  - 根节点概括核心主题
  - 一级节点覆盖主题的主要方面
  - 节点文本简洁 (≤ 20 个中文字符)
  - 节点命名有意义,易于理解
  - 同级节点之间有逻辑关联
  - 避免使用完整句子或过长文本
  """,

  """
  **视觉平衡性**:
  - 各主要分支节点数量相对均衡
  - 无某个分支过于庞大或单薄
  - 节点形状使用恰当 (根节点、子节点区分明显)
  - 图标使用适度 (非必需时可不用)
  - 整体结构清晰,层级分明
  """
]

# ============================================
# 使用场景示例
# ============================================

[[use_cases]]
title = "知识体系梳理"
scenario = "整理某个学科或技能领域的知识结构"
key_points = [
  "根节点为学科或技能名称",
  "一级节点为主要知识模块或章节",
  "二级节点为具体知识点或技能点",
  "三级节点为细节或应用场景",
  "适合学习笔记、考试复习、技能树规划"
]

[[use_cases]]
title = "项目规划分解"
scenario = "将复杂项目分解为可执行的任务和阶段"
key_points = [
  "根节点为项目名称或目标",
  "一级节点为主要阶段或模块",
  "二级节点为具体任务或交付物",
  "三级节点为任务细节或负责人",
  "可使用图标标记任务状态或优先级"
]

[[use_cases]]
title = "头脑风暴整理"
scenario = "整理头脑风暴或创意讨论的结果"
key_points = [
  "根节点为讨论主题或问题",
  "一级节点为主要观点或解决方向",
  "二级节点为具体想法或方案",
  "三级节点为执行细节或风险",
  "保持开放性,允许多个分支发散"
]
