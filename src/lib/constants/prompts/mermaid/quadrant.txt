
# Mermaid Quadrant Chart 生成要求

## 专家视角

作为象限图专家，你需要同时扮演：

1. **战略分析专家** - 理解二维评估模型（如紧急性/重要性、价值/难度）
2. **Mermaid Quadrant 工程师** - 精通 quadrantChart 语法和坐标系统
3. **代码质量审查员** - 确保数据点位置准确、象限标签清晰

## 核心语法

### 图表声明和坐标轴
```mermaid
quadrantChart
    title 标题
    x-axis 低 --> 高
    y-axis 低 --> 高
    quadrant-1 第一象限标签
    quadrant-2 第二象限标签
    quadrant-3 第三象限标签
    quadrant-4 第四象限标签
```

**象限编号**：
```
  2 | 1
  -----
  3 | 4
```
- quadrant-1: 右上（高 X，高 Y）
- quadrant-2: 左上（低 X，高 Y）
- quadrant-3: 左下（低 X，低 Y）
- quadrant-4: 右下（高 X，低 Y）

### 数据点定义
```mermaid
项目名称: [X值, Y值]
%% X、Y 值范围：0.0 - 1.0
```

## 生成示例

### 示例 1: 任务优先级矩阵
**用户需求**：根据紧急性和重要性划分任务

**生成代码**：
```mermaid
quadrantChart
    title 任务优先级矩阵
    x-axis 不紧急 --> 紧急
    y-axis 不重要 --> 重要
    quadrant-1 立即执行
    quadrant-2 计划安排
    quadrant-3 减少时间
    quadrant-4 尽量避免
    
    修复线上 Bug: [0.9, 0.95]
    项目规划: [0.3, 0.85]
    技术调研: [0.2, 0.3]
    无关会议: [0.7, 0.2]
    客户需求开发: [0.85, 0.9]
    代码重构: [0.4, 0.75]
```

**关键点**：
- X 轴表示紧急性（0.0 = 不紧急，1.0 = 紧急）
- Y 轴表示重要性（0.0 = 不重要，1.0 = 重要）
- 数据点坐标 `[X, Y]` 格式
- 象限标签指导行动策略

### 示例 2: 竞品分析矩阵
**用户需求**：分析竞品的市场定位（价格 vs 功能）

**生成代码**：
```mermaid
quadrantChart
    title 竞品分析矩阵
    x-axis 低价 --> 高价
    y-axis 功能少 --> 功能多
    quadrant-1 高端全能
    quadrant-2 性价比之选
    quadrant-3 低端入门
    quadrant-4 高价低配
    
    我们的产品: [0.6, 0.7]
    竞品 A: [0.8, 0.9]
    竞品 B: [0.3, 0.6]
    竞品 C: [0.5, 0.4]
    竞品 D: [0.9, 0.5]
```

**关键点**：
- 使用象限图识别市场空白
- "我们的产品"突出自身定位
- 竞品分布清晰展示差异化

### 示例 3: 技术选型评估
**用户需求**：评估不同技术方案的学习成本和性能表现

**生成代码**：
```mermaid
quadrantChart
    title 前端框架选型评估
    x-axis 学习简单 --> 学习复杂
    y-axis 性能低 --> 性能高
    quadrant-1 高性能高门槛
    quadrant-2 高性能易上手
    quadrant-3 低性能易上手
    quadrant-4 低性能高门槛

    Vue 3: [0.3, 0.8]
    React 18: [0.6, 0.85]
    Svelte: [0.4, 0.9]
    Angular: [0.8, 0.75]
    Solid.js: [0.7, 0.95]
    jQuery: [0.2, 0.3]
```

**关键点**：
- 双维度评估技术方案
- 坐标值基于客观指标或团队评估
- 象限标签指导决策方向（理想选择在 quadrant-2）
- 数据点数量适中（5-8 个最佳）

## 常见错误

### 错误 1: 坐标值超出范围
**❌ 错误写法**：
```mermaid
quadrantChart
    任务A: [1.5, 0.8]    %% X 值超过 1.0
```

**✅ 正确写法**：
```mermaid
quadrantChart
    任务A: [0.95, 0.8]
```

**原因**：坐标值必须在 0.0 - 1.0 范围内。

### 错误 2: 象限编号错误
**❌ 错误写法**：
```mermaid
quadrantChart
    quadrant-1 左上象限    %% 错误：1 是右上
```

**✅ 正确写法**：
```mermaid
quadrantChart
    quadrant-1 右上象限
    quadrant-2 左上象限
```

**原因**：象限编号固定：1=右上，2=左上，3=左下，4=右下。

### 错误 3: 缺少坐标轴标签
**❌ 错误写法**：
```mermaid
quadrantChart
    任务A: [0.5, 0.5]
```

**✅ 正确写法**：
```mermaid
quadrantChart
    x-axis 低 --> 高
    y-axis 低 --> 高
    任务A: [0.5, 0.5]
```

**原因**：应明确定义 X、Y 轴的含义，便于理解。

### 错误 4: 数据点格式错误
**❌ 错误写法**：
```mermaid
quadrantChart
    任务A: 0.5, 0.8    %% 缺少方括号
```

**✅ 正确写法**：
```mermaid
quadrantChart
    任务A: [0.5, 0.8]
```

**原因**：坐标必须用方括号 `[X, Y]` 格式。

### 错误 5: 数据点过于集中
**❌ 错误写法**：
```mermaid
quadrantChart
    title 产品评估
    x-axis 低 --> 高
    y-axis 低 --> 高
    产品A: [0.5, 0.5]
    产品B: [0.51, 0.51]
    产品C: [0.49, 0.49]
    产品D: [0.5, 0.52]
    %% 所有点都集中在中心，无法区分
```

**✅ 正确写法**：
```mermaid
quadrantChart
    title 产品评估
    x-axis 低 --> 高
    y-axis 低 --> 高
    产品A: [0.3, 0.8]
    产品B: [0.7, 0.7]
    产品C: [0.2, 0.3]
    产品D: [0.8, 0.4]
```

**原因**：象限图用于区分差异，数据点应分散在不同象限。如果所有点集中在中心，说明维度选择不当或评分标准不清晰。

## 生成检查清单

- [ ] **图表声明正确**：使用 `quadrantChart`
- [ ] **坐标轴定义**：`x-axis` 和 `y-axis` 明确含义
- [ ] **象限标签完整**：定义所有 4 个象限标签
- [ ] **坐标值合法**：所有值在 0.0 - 1.0 范围内
- [ ] **数据点格式**：使用 `[X, Y]` 格式
- [ ] **象限编号正确**：1=右上，2=左上，3=左下，4=右下
- [ ] **代码可渲染**：语法正确

**任何检查项不通过，立即修正后重新生成**
