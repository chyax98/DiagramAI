
# D2 语言通用规范

## 语法要求

### 节点定义
```d2
%% 简单节点
节点名

%% 带标签的节点
id: 显示文本

%% 嵌套容器（推荐方式）
父容器: {
  子节点1: 标签1
  子节点2: 标签2
}

%% 路径引用方式
父容器.子节点
```

### 连接语法
```d2
%% 单向连接
A -> B

%% 双向连接
A <-> B

%% 反向连接
A <- B

%% 带标签的连接
A -> B: "连接标签"

%% 带样式的连接
A -> B: {
  style.stroke-dash: 3
  style.animated: true
}
```

### 形状类型
D2 支持丰富的形状类型：
- `rectangle` - 矩形（默认）
- `circle` - 圆形
- `diamond` - 菱形（判断节点）
- `hexagon` - 六边形
- `cylinder` - 圆柱体（数据库）
- `cloud` - 云形（云服务）
- `person` - 人形（用户）
- `document` - 文档形
- `page` - 页面形
- `stored_data` - 存储数据形
- `sql_table` - SQL 表格
- `class` - 类图形状
- `sequence_diagram` - 时序图容器

### 样式配置
```d2
节点: {
  shape: rectangle
  style.fill: "#颜色代码"        %% 填充色
  style.stroke: "#边框颜色"       %% 边框色
  style.stroke-width: 2           %% 边框粗细
  style.stroke-dash: 3            %% 虚线样式
  style.animated: true            %% 动画效果
  style.multiple: true            %% 多实例效果
  style.border-radius: 10         %% 圆角
}
```

### 布局方向
```d2
direction: right    %% 从左到右（推荐用于流程图）
direction: down     %% 从上到下（默认）
direction: left     %% 从右到左
direction: up       %% 从下到上
```

## 命名规范

### ✅ 推荐做法
- 使用清晰的中文标签描述节点
- ID 简洁但有意义（如：`用户`, `数据库`, `API网关`）
- 容器名称体现分组含义（如：`前端层`, `应用层`, `数据层`）
- 连接标签说明关系或数据流（如：`HTTP请求`, `读写数据`）

### ❌ 避免做法
- 过长的名称（超过 15 个字符）
- 无意义的 ID（如：`a`, `b`, `c`）
- 不一致的命名风格

## 样式系统

### 配色建议
- 🔵 蓝色系 (#e3f2fd, #bbdefb) - 界面、前端、UI
- 🟢 绿色系 (#c8e6c9, #a5d6a7) - 服务、后端、API
- 🟠 橙色系 (#ffccbc, #ffab91) - 数据库、存储、缓存
- 🟣 紫色系 (#d1c4e9, #b39ddb) - 外部服务、第三方
- 🔴 红色系 (#ffcdd2, #ef9a9a) - 安全、防火墙、错误
- 🟡 黄色系 (#fff9c4, #fff59d) - 处理中、中间层、DMZ

### 样式一致性
- 同类组件使用统一配色
- 使用柔和的颜色（避免纯色）
- 重要节点使用醒目颜色或加粗边框

## 常见错误

### 错误 1: 嵌套层级过深
**❌ 错误**：超过 3 层嵌套，结构混乱
**✅ 正确**：控制在 2-3 层嵌套，必要时使用引用

### 错误 2: 连接线交叉混乱
**❌ 错误**：连接关系过于复杂导致交叉
**✅ 正确**：合理规划布局，使用 `direction` 调整方向

### 错误 3: 缺少容器分组
**❌ 错误**：所有节点平铺，缺少层次
**✅ 正确**：使用容器对相关组件分组

### 错误 4: 样式不一致
**❌ 错误**：同类组件使用不同颜色和样式
**✅ 正确**：建立统一的样式规范

### 错误 5: 标签信息不足
**❌ 错误**：连接线没有标签，关系不明确
**✅ 正确**：为关键连接添加清晰的标签说明
