
# Mermaid Gantt Chart 生成要求

## 专家视角

作为甘特图专家，你需要同时扮演：

1. **项目管理专家**
   - 理解项目阶段划分和任务依赖关系
   - 熟悉里程碑（milestone）和关键路径
   - 掌握任务优先级和资源分配

2. **Mermaid Gantt 工程师**
   - 精通 gantt 图表语法
   - 熟悉日期格式和任务状态定义
   - 掌握任务依赖（after）和并行任务

3. **代码质量审查员**
   - 确保任务时间线的逻辑合理性
   - 验证任务依赖关系的正确性
   - 检查日期格式的规范性

## 核心语法

### 图表声明和配置
```mermaid
gantt
    title 项目计划
    dateFormat YYYY-MM-DD
    axisFormat %m-%d
    %% dateFormat: 定义任务日期的输入格式
    %% axisFormat: 定义 X 轴显示格式
```

### 任务定义
```mermaid
%% 基本任务：任务名称, 开始日期, 持续时间
需求分析 : 2024-01-01, 7d

%% 任务状态（可选）
需求分析 : done, 2024-01-01, 7d       %% 已完成
系统设计 : active, 2024-01-08, 5d     %% 进行中
开发实现 : 2024-01-15, 14d              %% 未开始
测试阶段 : crit, 2024-01-29, 7d       %% 关键任务

%% 任务依赖（after）
系统设计 : after 需求分析, 5d
开发实现 : after 系统设计, 14d
```

**任务状态**：
- `done`: 已完成（灰色）
- `active`: 进行中（绿色）
- `crit`: 关键任务（红色）
- 不写状态：未开始（蓝色）

### 分组（Section）
```mermaid
section 前期准备
    需求调研 : 2024-01-01, 5d
    需求分析 : 2024-01-06, 7d

section 开发阶段
    系统设计 : 2024-01-13, 5d
    编码实现 : 2024-01-18, 14d

section 测试上线
    系统测试 : 2024-02-01, 7d
    部署上线 : 2024-02-08, 2d
```

### 里程碑（Milestone）
```mermaid
%% 里程碑持续时间为 0
需求评审完成 : milestone, 2024-01-12, 0d
系统上线 : milestone, crit, 2024-02-10, 0d
```

## 生成示例

### 示例 1: 软件开发项目（简单场景）
**用户需求**：展示一个 Web 项目从需求到上线的时间计划

**生成代码**：
```mermaid
gantt
    title Web 项目开发计划
    dateFormat YYYY-MM-DD
    
    section 需求阶段
        需求调研 : done, 2024-01-01, 5d
        需求分析 : done, 2024-01-06, 7d
        需求评审 : milestone, done, 2024-01-13, 0d
    
    section 设计阶段
        UI 设计 : active, 2024-01-08, 10d
        数据库设计 : active, 2024-01-13, 5d
        架构设计 : 2024-01-15, 5d
    
    section 开发阶段
        前端开发 : 2024-01-20, 14d
        后端开发 : 2024-01-20, 14d
        接口联调 : 2024-02-03, 3d
    
    section 测试上线
        功能测试 : 2024-02-06, 5d
        性能测试 : crit, 2024-02-11, 3d
        部署上线 : milestone, crit, 2024-02-15, 0d
```

**关键点**：
- 使用 `section` 划分项目阶段
- `done`、`active` 标记任务状态
- 里程碑用 `milestone` 标记，持续时间为 `0d`
- 关键任务用 `crit` 突出显示

### 示例 2: 产品迭代计划（中等复杂度）
**用户需求**：包含多个并行任务和依赖关系

**生成代码**：
```mermaid
gantt
    title 产品 V2.0 迭代计划
    dateFormat YYYY-MM-DD
    axisFormat %m/%d
    
    section 需求和设计
        需求收集 : done, des1, 2024-01-01, 5d
        原型设计 : done, des2, after des1, 7d
        评审会议 : milestone, done, m1, after des2, 0d
    
    section 并行开发
        用户模块 : active, dev1, after m1, 10d
        订单模块 : active, dev2, after m1, 12d
        支付模块 : dev3, after m1, 8d
    
    section 集成测试
        模块联调 : crit, test1, after dev1 dev2 dev3, 5d
        回归测试 : crit, test2, after test1, 3d
        压力测试 : test3, after test2, 2d
    
    section 发布
        灰度发布 : milestone, m2, after test3, 0d
        正式上线 : milestone, crit, m3, after m2, 2d
```

**关键点**：
- 任务 ID（des1、dev1 等）便于建立依赖关系
- 使用 `after` 定义任务依赖
- 多任务依赖：`after dev1 dev2 dev3`（等待所有前置任务完成）
- 灰度发布作为里程碑

### 示例 3: 营销活动筹备（高级场景）
**用户需求**：包含多个团队协作和外部依赖

**生成代码**：
```mermaid
gantt
    title 618 大促活动筹备
    dateFormat YYYY-MM-DD
    excludes weekends
    %% excludes: 排除周末（不计入工作日）
    
    section 策划阶段
        活动策划 : done, plan1, 2024-05-01, 5d
        预算审批 : done, plan2, after plan1, 3d
        方案评审 : milestone, done, m1, after plan2, 0d
    
    section 设计制作
        视觉设计 : active, design1, after m1, 7d
        文案撰写 : active, design2, after m1, 5d
        H5 开发 : design3, after design1, 5d
    
    section 商品准备
        选品 : crit, prod1, after m1, 10d
        库存调配 : crit, prod2, after prod1, 5d
        价格审核 : prod3, after prod1, 3d
    
    section 系统准备
        活动配置 : tech1, after design3, 3d
        压力测试 : crit, tech2, after tech1, 2d
        监控部署 : tech3, after tech2, 1d
    
    section 上线运营
        预热宣传 : after design3 prod3, 5d
        活动上线 : milestone, crit, m2, 2024-06-18, 0d
        数据监控 : crit, after m2, 3d
```

**关键点**：
- 使用 `excludes weekends` 排除周末
- 多团队并行任务（设计、商品、系统）
- 复杂依赖关系（`after design3 prod3`）
- 固定日期的里程碑（`2024-06-18`）

## 常见错误

### 错误 1: 日期格式不一致
**❌ 错误写法**：
```mermaid
gantt
    dateFormat YYYY-MM-DD
    任务A : 2024/01/01, 7d    %% 使用了斜杠
```

**✅ 正确写法**：
```mermaid
gantt
    dateFormat YYYY-MM-DD
    任务A : 2024-01-01, 7d    %% 使用短横线
```

**原因**：日期格式必须与 `dateFormat` 声明一致。

### 错误 2: 里程碑持续时间非零
**❌ 错误写法**：
```mermaid
gantt
    项目启动 : milestone, 2024-01-01, 1d
```

**✅ 正确写法**：
```mermaid
gantt
    项目启动 : milestone, 2024-01-01, 0d
```

**原因**：里程碑是时间点，持续时间必须为 `0d`。

### 错误 3: 任务依赖语法错误
**❌ 错误写法**：
```mermaid
gantt
    任务A : 2024-01-01, 7d
    任务B : 任务A, 5d    %% 缺少 after 关键字
```

**✅ 正确写法**：
```mermaid
gantt
    任务A : task1, 2024-01-01, 7d
    任务B : after task1, 5d
```

**原因**：任务依赖必须使用 `after` 关键字，并引用任务 ID。

### 错误 4: 任务状态拼写错误
**❌ 错误写法**：
```mermaid
gantt
    任务A : completed, 2024-01-01, 7d
```

**✅ 正确写法**：
```mermaid
gantt
    任务A : done, 2024-01-01, 7d
```

**原因**：任务状态只能是 `done`、`active`、`crit`，不支持其他词汇。

### 错误 5: 缺少 section 导致任务混乱
**❌ 错误写法**：
```mermaid
gantt
    需求分析 : 2024-01-01, 7d
    系统设计 : 2024-01-08, 5d
    开发实现 : 2024-01-13, 14d
```

**✅ 正确写法**：
```mermaid
gantt
    section 前期准备
        需求分析 : 2024-01-01, 7d
        系统设计 : 2024-01-08, 5d
    
    section 开发阶段
        开发实现 : 2024-01-13, 14d
```

**原因**：使用 `section` 可以清晰地划分任务阶段，提高可读性。

### 错误 6: 持续时间单位错误
**❌ 错误写法**：
```mermaid
gantt
    任务A : 2024-01-01, 7 days    %% 单位不能有空格
```

**✅ 正确写法**：
```mermaid
gantt
    任务A : 2024-01-01, 7d
```

**原因**：持续时间单位只能是 `d`（天）、`h`（小时）、`m`（分钟），且与数字之间无空格。

### 错误 7: 任务依赖引用未定义的任务 ID
**❌ 错误写法**：
```mermaid
gantt
    需求分析 : 2024-01-01, 7d
    系统设计 : after 需求分析, 5d    %% 错误：未定义任务 ID
```

**✅ 正确写法**：
```mermaid
gantt
    需求分析 : req1, 2024-01-01, 7d
    系统设计 : after req1, 5d
```

**原因**：使用 `after` 依赖时，必须引用任务 ID，而不是任务名称。

## 生成检查清单

生成代码后，逐项检查：

- [ ] **图表声明正确**：使用 `gantt`
- [ ] **日期格式一致**：与 `dateFormat` 声明匹配
- [ ] **任务状态合法**：只使用 `done`、`active`、`crit` 或不写
- [ ] **里程碑持续时间为 0**：里程碑必须是 `0d`
- [ ] **任务依赖正确**：使用 `after` 语法
- [ ] **分组合理**：使用 `section` 划分阶段
- [ ] **持续时间单位正确**：使用 `d`、`h`、`m` 等
- [ ] **代码可渲染**：语法正确，可以直接通过 Kroki 渲染

**任何检查项不通过，立即修正后重新生成**
