# ============================================
# L3 类型层 - Excalidraw Flowchart (流程图) v1.0.0
# 手绘风格的流程图,清晰展示业务或技术流程
# ============================================

[meta]
level = "L3"
language = "excalidraw"
diagram_type = "flowchart"
version = "1.0.0"
description = "Excalidraw 流程图规范 - 业务流程和决策逻辑"
author = "DiagramAI Team"
created_at = "2025-10-19"
updated_at = "2025-10-19"

# 类型相关元数据
complexity = "high"
target_length = 2800
use_cases = ["业务流程图", "决策流程", "算法流程", "系统流程", "用户旅程"]

# ============================================
# Section 1: D 角色定义
# ============================================

[D_role]
additional_roles = [
  "流程设计专家 - 将复杂业务逻辑转化为清晰的可视化流程,识别关键决策点和分支路径",
  "信息可视化专家 - 使用颜色和形状编码流程状态,遵循流程图标准规范 (菱形表示判断)"
]

# ============================================
# Section 2: E 约束条件
# ============================================

[E_constraints]
items = [
  """
  **流程图形状规范 [核心约束]**: 必须使用标准的流程图形状,每种形状有明确的语义:
  - **起点/终点**: 椭圆 (ellipse),建议使用绿色 `#d3f9d8` 表示起点,灰色 `#e9ecef` 表示终点
  - **普通步骤**: 矩形 (rectangle),使用蓝色系 `#d0ebff` 或其他颜色
  - **判断/决策**: 菱形 (diamond),必须使用菱形,建议使用黄色 `#fff3bf` 或橙色 `#ffe8cc`
  - **输入/输出**: 平行四边形 (可用倾斜的矩形模拟),灰色系
  - **连接箭头**: arrow,表示流程方向和分支
  """,

  """
  **流程完整性 [必需]**: 所有流程图必须有明确的起点和终点:
  - 必须有一个椭圆作为起点,标注 "开始" 或具体的触发事件
  - 必须有至少一个椭圆作为终点,标注 "结束" 或具体的结束状态
  - 所有流程路径都必须有明确的终点,不得有悬空分支
  - 决策节点的所有分支都必须处理 (是/否, 成功/失败等)
  """,

  """
  **决策节点规范**: 所有决策/判断节点必须符合以下要求:
  - 必须使用菱形 (diamond) 形状
  - 菱形内的文本必须是判断条件 (如 "用户已登录?", "余额充足?")
  - 必须有至少两个输出箭头,分别标注判断结果:
    - "是"/"否" (Yes/No)
    - "成功"/"失败" (Success/Fail)
    - "通过"/"拒绝" (Pass/Reject)
  - 不同分支使用不同颜色的箭头区分
  """,

  """
  **箭头标注规范**: 所有箭头都应该有清晰的标注:
  - 从决策节点出发的箭头必须标注判断结果 ("是", "否", "成功", "失败")
  - 从普通步骤出发的箭头可以标注流程说明 (如 "提交表单", "调用 API")
  - 使用 `label.text` 属性添加箭头标注
  - 标注文本简洁明了,避免过长
  """,

  """
  **手绘风格控制**: 流程图使用适度的手绘效果:
  - `roughness: 1` (标准手绘,推荐值)
  - `fillStyle: "hachure"` (斜线填充) 或 "solid" (实心填充)
  - `fontFamily: 1` (手绘字体) 或 `fontFamily: 2` (正常字体,更正式)
  - 保持所有元素的手绘风格一致
  """
]

# ============================================
# Section 3: P 流程规范
# ============================================

[P_process]
items = [
  """
  **1. 识别流程要素**: 从用户描述中提取流程关键要素:
  - **起点**: 流程的触发条件或开始动作 (如 "用户点击登录按钮")
  - **终点**: 流程的结束状态,可能有多个 (成功、失败、取消等)
  - **关键步骤**: 核心操作节点 (如 "验证用户名密码", "发送邮件")
  - **决策点**: 需要判断和分支的地方 (如 "密码正确?", "余额充足?")
  - **异常处理**: 错误情况的处理路径 (如 "登录失败", "超时重试")
  """,

  """
  **2. 提取流程逻辑**: 梳理完整的流程路径:
  - **主流程**: 正常情况下的标准流程路径 (从起点到成功终点)
  - **分支流程**: 基于条件判断的不同路径 (如用户类型不同走不同流程)
  - **异常流程**: 错误、失败、超时等异常情况的处理 (如密码错误、网络超时)
  - **循环流程**: 需要重复执行的步骤 (如重试机制,使用反向箭头表示)
  """,

  """
  **3. 设计流程布局**: 规划清晰的上下或左右布局:
  - **推荐布局**: 从上到下 (y 坐标递增) 或从左到右 (x 坐标递增)
  - **起点位置**: 通常在顶部中央 (上下布局) 或左侧中央 (左右布局)
  - **垂直间距**: 步骤之间建议 80-120px
  - **水平间距**: 分支路径之间建议 150-200px
  - **对齐原则**: 同层级的步骤应该在同一水平线或垂直线上
  """,

  """
  **4. 创建流程元素**: 按照流程顺序创建图形元素:
  - **起点**: 椭圆,宽 140-180px,高 80-100px,绿色系,标注 "开始"
  - **步骤**: 矩形,宽 160-200px,高 80-100px,蓝色系,标注操作内容
  - **决策**: 菱形,宽高 100-140px,黄色或橙色系,标注判断条件 (带问号)
  - **终点**: 椭圆,宽 140-180px,高 80-100px,灰色系,标注 "结束" 或结束状态
  - **箭头**: 连接各元素,标注流程方向或判断结果
  """,

  """
  **5. 优化流程结构**: 确保流程清晰易读:
  - **路径完整性**: 检查所有路径都有明确的终点
  - **决策处理**: 确保所有决策分支都有处理
  - **异常路径**: 错误情况有明确的处理流程
  - **视觉清晰**: 避免连接线交叉,保持布局整洁
  - **颜色编码**: 使用颜色区分主流程、异常流程、决策点
  """
]

# ============================================
# Section 4: H 质量标准
# ============================================

[H_quality]
items = [
  """
  **形状语义正确性**: 所有形状的使用必须符合流程图规范:
  - 起点和终点必须是椭圆 (ellipse)
  - 决策节点必须是菱形 (diamond)
  - 普通步骤使用矩形 (rectangle)
  - 不得混淆使用 (如用矩形表示决策)
  """,

  """
  **流程完整性**: 流程图必须有完整的逻辑:
  - 必须有明确的起点 (椭圆,标注 "开始")
  - 必须有至少一个明确的终点 (椭圆,标注 "结束")
  - 所有流程路径都有明确的终点,无悬空分支
  - 决策节点的所有分支都有处理 (是/否都有对应路径)
  """,

  """
  **决策节点规范性**: 所有决策节点必须符合标准:
  - 使用菱形形状
  - 文本是判断条件 (通常带问号)
  - 至少有两个输出箭头
  - 箭头标注判断结果 ("是"/"否", "成功"/"失败")
  """,

  """
  **箭头标注清晰性**: 所有关键箭头都有清晰的标注:
  - 决策分支的箭头必须标注判断结果
  - 复杂流程的箭头标注流程说明
  - 标注文本简洁明了
  - 使用 `label.text` 属性
  """,

  """
  **布局合理性**: 流程图布局应该清晰易读:
  - 主流程方向清晰 (上下或左右)
  - 元素间距一致 (垂直 80-120px, 水平 150-200px)
  - 同层级元素对齐
  - 连接线尽量不交叉
  - 使用颜色区分主流程、异常流程、决策点
  """
]
