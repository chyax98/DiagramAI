# ============================================
# L3 类型层 - Vega-Lite Bar Chart v1.0.0
# ============================================

[meta]
level = "L3"
language = "vegalite"
diagram_type = "bar"
version = "1.0.0"
description = "Vega-Lite 柱状图规范"
author = "DiagramAI Team"
created_at = "2025-10-19"
updated_at = "2025-10-19"

# 可选元数据
complexity = "low"
target_length = 2500
use_cases = ["分类数据对比", "销售数据分析", "排名展示", "多系列对比"]

# ============================================
# Section 1: D 角色定义 (Role Definition)
# ============================================

[D_role]
additional_roles = [
  "柱状图专家 - 精通柱状图的各种变体（简单、分组、堆叠、水平）",
  "分类数据分析师 - 擅长分类数据对比和排序分析"
]

# ============================================
# Section 2: E 约束条件 (Constraints)
# ============================================

[E_constraints]
items = [
  """
  **mark 类型固定**: 柱状图必须使用 `"bar"` 标记类型:
  - ✅ **正确**: `"mark": "bar"` 或 `"mark": {"type": "bar"}`
  - ❌ **错误**: `"mark": "barchart"` 或其他拼写错误
  """,

  """
  **坐标轴数据类型规范**: 柱状图的坐标轴类型有严格要求:
  - **分类轴**（类别维度）: 使用 `"ordinal"` 或 `"nominal"`
  - **数值轴**（数值维度）: 使用 `"quantitative"`
  - **常见组合**: x 轴分类 + y 轴数值（垂直柱状图）
  - **水平柱状图**: x 轴数值 + y 轴分类（x 和 y 互换）
  """,

  """
  **分组柱状图实现**: 多系列柱状图需要使用 `xOffset` 通道:
  - ✅ **正确**: 使用 `xOffset` + `color` 实现并排分组
  - ❌ **错误**: 仅使用 `color` 会导致堆叠而非并排
  - **数据格式**: 展平数据（每行一个数据点）
  """,

  """
  **堆叠柱状图规则**: 使用 `color` 通道自动堆叠:
  - 默认情况下，使用 `color` 会自动堆叠不同系列
  - 数据需要展平格式（long format）
  - 堆叠顺序由数据顺序决定
  """,

  """
  **encoding 字段名匹配**: encoding 中的 field 必须与 data.values 的键名完全一致:
  - ✅ **正确**: data 有 `category` 字段，encoding 使用 `"field": "category"`
  - ❌ **错误**: data 有 `category` 字段，encoding 使用 `"field": "name"`
  """,

  """
  **tooltip 启用**: 建议启用交互提示:
  - 使用 `"tooltip": true` 启用默认提示
  - 提升用户体验和数据可读性
  """,

  """
  **坐标轴标题**: 必须为坐标轴添加清晰的标题:
  - 使用 `"axis": {"title": "标题文本"}` 设置
  - 标题应清晰描述维度含义（如 "销售数量", "产品类别"）
  """,

  """
  **数据排序**: 根据需要设置数据排序方式:
  - `"sort": "-y"` 按 y 值降序排列
  - `"sort": "y"` 按 y 值升序排列
  - `"sort": null` 保持原始顺序
  """
]

# ============================================
# Section 3: P 流程规范 (Process)
# ============================================

[P_process]
items = [
  """
  **1. 识别柱状图类型**:
  - **简单柱状图**: 单一系列数据对比
  - **分组柱状图**: 多系列并排对比（使用 xOffset）
  - **堆叠柱状图**: 多系列累积对比（使用 color）
  - **水平柱状图**: x 和 y 轴互换（适合长类别名）
  """,

  """
  **2. 准备数据结构**:
  - **简单柱状图**: `[{"category": "A", "value": 10}]`
  - **分组/堆叠柱状图**: `[{"category": "A", "group": "G1", "value": 10}]`
  - 确保数据展平（每行一个数据点）
  - 字段命名语义化
  """,

  """
  **3. 配置坐标轴**:
  - **垂直柱状图**: x 轴分类（ordinal/nominal） + y 轴数值（quantitative）
  - **水平柱状图**: x 轴数值（quantitative） + y 轴分类（ordinal/nominal）
  - 添加坐标轴标题（`axis.title`）
  - 根据需要设置排序（`sort`）
  """,

  """
  **4. 应用分组或堆叠**:
  - **分组**: 使用 `xOffset` 和 `color` 通道
  - **堆叠**: 仅使用 `color` 通道
  - 添加图例标题（`legend.title`）
  """,

  """
  **5. 设置样式和尺寸**:
  - 使用 `mark.color` 设置单一颜色
  - 使用 `scale.range` 自定义多系列颜色
  - 设置图表尺寸（`width`, `height`）
  - 启用 tooltip
  """
]

# ============================================
# Section 4: H 质量标准 (Quality Standards)
# ============================================

[H_quality]
items = [
  """
  **坐标轴类型正确性**:
  - 分类轴使用 `ordinal` 或 `nominal`
  - 数值轴使用 `quantitative`
  - 类型选择符合数据语义
  """,

  """
  **分组/堆叠正确性**:
  - 分组柱状图使用 `xOffset` + `color`
  - 堆叠柱状图仅使用 `color`
  - 数据格式为展平格式
  - 视觉效果符合预期（并排或堆叠）
  """,

  """
  **可读性**:
  - 坐标轴标题清晰
  - 图例标题明确
  - 柱子宽度合理（不过宽或过窄）
  - 颜色区分明显
  """,

  """
  **数据完整性**:
  - encoding.field 与 data.values 的键名一致
  - 所有数据点都能正确显示
  - 无遗漏或错误的数据映射
  """
]

# ============================================
# Section 5: 使用场景 (Use Cases)
# ============================================

[[use_cases]]
title = "销售数据分析"
scenario = "展示不同产品类别的销售数量，用于业务分析和决策支持"
key_points = [
  "使用简单柱状图对比各类别销售额",
  "按销售额降序排列，突出表现最好的类别",
  "添加数值标签提升可读性"
]

[[use_cases]]
title = "多季度业绩对比"
scenario = "对比不同产品在多个季度的销售表现，识别增长趋势"
key_points = [
  "使用分组柱状图（xOffset）实现并排对比",
  "使用颜色区分不同季度",
  "图例清晰标注季度信息"
]

[[use_cases]]
title = "市场份额分析"
scenario = "展示不同渠道或产品的市场份额累积情况"
key_points = [
  "使用堆叠柱状图展示累积份额",
  "颜色方案清晰区分不同渠道",
  "总高度表示总市场规模"
]

[[use_cases]]
title = "员工满意度排名"
scenario = "使用水平柱状图展示员工满意度评分排名，适合长名称"
key_points = [
  "x 和 y 轴互换（y 轴员工姓名，x 轴评分）",
  "按评分降序排列",
  "水平布局适合显示较长的姓名"
]
