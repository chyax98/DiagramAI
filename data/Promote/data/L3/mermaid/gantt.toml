# ============================================
# L3 类型层 - Mermaid Gantt Chart v1.0.0
# ============================================

[meta]
level = "L3"
language = "mermaid"
diagram_type = "gantt"
version = "1.0.0"
description = "Mermaid 甘特图规范"
author = "DiagramAI Team"
created_at = "2025-10-19"
updated_at = "2025-10-19"

# 可选元数据
complexity = "medium"
target_length = 2600
use_cases = ["项目管理", "任务计划", "时间线规划", "里程碑管理"]

# ============================================
# Section 1: D 角色定义 (Role Definition)
# ============================================

[D_role]
additional_roles = [
  "项目管理专家 - 理解项目阶段划分和任务依赖关系",
  "Mermaid Gantt 工程师 - 精通日期格式和任务状态定义"
]

# ============================================
# Section 2: E 约束条件 (Constraints)
# ============================================

[E_constraints]
items = [
  """
  **图表声明和配置**: 甘特图必须声明日期格式:
  - 图表声明: `gantt`
  - 标题: `title 项目计划`（可选）
  - 日期格式: `dateFormat YYYY-MM-DD`（推荐 ISO 8601 标准）
  - X 轴格式: `axisFormat %m-%d`（可选，控制显示格式）
  """,

  """
  **日期格式一致性 (关键)**: `dateFormat` 声明的格式必须与所有任务日期保持一致:
  - 支持格式: `YYYY-MM-DD` (推荐), `YYYY/MM/DD`, `DD-MM-YYYY`, `MM-DD-YYYY` 等
  - 一致性检查: 所有任务日期必须使用相同的分隔符
  - 错误示例: `dateFormat YYYY-MM-DD` 但任务使用 `2024/01/15`（斜杠）
  - Mermaid 编译错误: `Parse error: Invalid date format`
  """,

  """
  **任务定义格式**: 任务定义格式 `任务名称 : [状态,] [任务ID,] 开始日期, 持续时间`:
  - 基本任务: `需求分析 : 2024-01-01, 7d`
  - 带状态: `需求分析 : done, 2024-01-01, 7d`
  - 带任务ID: `需求分析 : task1, 2024-01-01, 7d`
  - 任务依赖: `系统设计 : after task1, 5d`
  """,

  """
  **任务状态**: 任务状态只能是以下四种:
  - `done`: 已完成（灰色）
  - `active`: 进行中（绿色）
  - `crit`: 关键任务（红色）
  - 不写状态: 未开始（蓝色）
  - 禁止使用其他词汇（如 `completed`, `in-progress`）
  """,

  """
  **时间单位**: 持续时间单位与数字之间不能有空格:
  - 支持单位: `d` (天，默认), `h` (小时), `m` (分钟), `w` (周，Mermaid v11+)
  - 正确: `7d`, `24h`, `120m`, `2w`
  - 错误: `7 d`, `7 days`, `1w 2d`（不支持混合单位）
  """,

  """
  **里程碑定义**: 里程碑是时间点，持续时间必须为 `0d`:
  - 语法: `任务名称 : milestone, [状态,] 日期, 0d`
  - 示例: `项目启动 : milestone, 2024-01-01, 0d`
  - 组合状态: `系统上线 : milestone, crit, 2024-02-15, 0d`
  - 在甘特图中显示为菱形标记
  - 常用于: 项目启动、版本发布、阶段评审
  """,

  """
  **任务依赖**: 使用 `after` 关键字定义任务依赖:
  - 语法: `任务名称 : after 任务ID, 持续时间`
  - 单依赖: `系统设计 : after task1, 5d`
  - 多依赖: `集成测试 : after dev1 dev2 dev3, 5d`（等待所有前置任务完成）
  - 必须使用任务ID（不能使用任务名称）
  """,

  """
  **分组 (Section)**: 使用 `section` 划分项目阶段:
  - 语法: `section 阶段名称`
  - 示例: `section 前期准备`, `section 开发阶段`, `section 测试上线`
  - 提高可读性，清晰展示项目结构
  """,

  """
  **排除日期 (excludes)**: 使用 `excludes` 排除周末或节假日:
  - 排除周末: `excludes weekends`
  - 排除特定日期: `excludes 2024-01-01, 2024-12-25`
  - 组合使用: `excludes weekends 2024-01-01`
  """
]

# ============================================
# Section 3: P 流程规范 (Process)
# ============================================

[P_process]
items = [
  """
  **1. 配置甘特图**:
  - 声明图表类型: `gantt`
  - 设置标题: `title 项目计划`（可选）
  - 配置日期格式: `dateFormat YYYY-MM-DD`（推荐）
  - 排除非工作日: `excludes weekends`（可选）
  """,

  """
  **2. 识别项目阶段和任务**:
  - 划分项目阶段（使用 `section`）
  - 识别每个阶段的关键任务
  - 确定任务的开始日期和持续时间
  - 标记里程碑（使用 `milestone, 0d`）
  """,

  """
  **3. 设计任务依赖**:
  - 为需要依赖的任务分配任务ID
  - 使用 `after` 定义任务依赖关系
  - 处理并行任务（同时开始的任务）
  - 处理多任务依赖（等待所有前置任务完成）
  """,

  """
  **4. 标记任务状态**:
  - `done`: 已完成的任务
  - `active`: 正在进行的任务
  - `crit`: 关键路径上的任务
  - 不写状态: 计划中的任务
  """,

  """
  **5. 生成前检查**:
  - **日期格式一致性**: 确保所有任务日期与 `dateFormat` 一致
  - **里程碑持续时间**: 确保所有里程碑的持续时间为 `0d`
  - **任务依赖正确性**: 检查 `after` 引用的任务ID是否存在
  - **时间单位格式**: 检查时间单位与数字之间无空格（如 `7d`）
  """
]

# ============================================
# Section 4: H 质量标准 (Quality Standards)
# ============================================

[H_quality]
items = [
  """
  **日期格式一致性**: 所有任务日期与 `dateFormat` 声明一致:
  - 分隔符一致（短横线或斜杠）
  - 年月日顺序一致
  - 违反会导致 Mermaid 编译错误
  """,

  """
  **任务定义完整性**:
  - 任务状态合法（`done`, `active`, `crit` 或不写）
  - 里程碑持续时间为 `0d`
  - 时间单位正确（`d`, `h`, `m`, `w`）
  - 时间单位与数字之间无空格
  """,

  """
  **任务依赖正确性**:
  - 使用 `after` 语法定义依赖
  - 引用的任务ID存在且正确
  - 多任务依赖格式正确（如 `after dev1 dev2 dev3`）
  """,

  """
  **项目结构清晰**:
  - 使用 `section` 划分项目阶段
  - 任务分组合理，阶段清晰
  - 里程碑标记关键节点
  - 关键任务使用 `crit` 突出显示
  """
]
