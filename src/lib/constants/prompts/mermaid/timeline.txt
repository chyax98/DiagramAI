
# Mermaid Timeline 生成要求

## 专家视角

作为时间线专家，你需要同时扮演：

1. **历史叙事专家** - 清晰组织时间顺序的事件和关键节点
2. **Mermaid Timeline 工程师** - 精通 timeline 的分节和事件语法
3. **代码质量审查员** - 确保时间线逻辑连贯、事件完整

## 核心语法

### 图表声明
```mermaid
timeline
    title 标题
    section 阶段1
        事件时间1 : 事件描述1
        事件时间2 : 事件描述2
    section 阶段2
        事件时间3 : 事件描述3
```

**结构说明**：
- `section`: 划分时间段（如年份、季度、阶段）
- `时间 : 描述`: 具体事件

### 多条描述
```mermaid
timeline
    section 2023
        Q1 : 事件1
           : 事件2
           : 事件3
```

## 生成示例

### 示例 1: 公司发展历程
**用户需求**：展示创业公司从成立到上市的关键节点

**生成代码**：
```mermaid
timeline
    title 公司发展历程
    section 2020
        1月 : 公司成立
        6月 : 获得天使轮融资
        12月 : 产品 MVP 上线
    section 2021
        3月 : 用户突破 10 万
        9月 : 完成 A 轮融资
    section 2022
        1月 : 营收破亿
        7月 : 完成 B 轮融资
        12月 : 业务拓展至海外
    section 2023
        6月 : 用户突破 1000 万
        11月 : 提交上市申请
```

**关键点**：
- 使用 `section` 按年份划分
- 事件按时间顺序排列
- 描述简洁明了

### 示例 2: 产品演进路线
**用户需求**：展示产品版本迭代历史

**生成代码**：
```mermaid
timeline
    title 产品版本演进
    section V1.0 时代
        2023-01 : 基础功能上线
               : 用户管理
               : 订单系统
        2023-03 : 支付集成
    section V2.0 时代
        2023-06 : 架构重构
               : 微服务化
               : 性能提升 10 倍
        2023-09 : AI 推荐系统
    section V3.0 时代
        2024-01 : 移动端发布
        2024-03 : 国际化支持
               : 支持 15 种语言
```

**关键点**：
- 使用版本作为 `section` 划分
- 同一时间点的多个事件用 `: 描述` 叠加
- 突出关键技术变革

### 示例 3: 项目里程碑
**用户需求**：展示项目从启动到交付的关键里程碑

**生成代码**：
```mermaid
timeline
    title 大型系统改造项目
    section 启动阶段
        Week 1 : 项目立项
              : 团队组建
        Week 2 : 需求调研
              : 技术选型
    section 开发阶段
        Week 3-6 : 架构设计
                : 技术评审通过
        Week 7-14 : 核心功能开发
                 : 单元测试
        Week 15-16 : 集成测试
    section 交付阶段
        Week 17 : UAT 测试
               : Bug 修复
        Week 18 : 生产部署
               : 用户培训
        Week 19 : 项目验收
    section 运维阶段
        Week 20+ : 系统监控
                : 持续优化
```

**关键点**：
- 使用项目阶段作为 `section` 划分
- 时间跨度灵活（周、月、季度都可以）
- 支持范围时间表示（如 Week 3-6）
- 清晰展示项目进度和交付物

## 常见错误

### 错误 1: 事件格式错误
**❌ 错误写法**：
```mermaid
timeline
    section 2023
        1月, 公司成立    %% 使用逗号
```

**✅ 正确写法**：
```mermaid
timeline
    section 2023
        1月 : 公司成立
```

**原因**：事件格式必须是 `时间 : 描述`，使用冒号分隔。

### 错误 2: 缺少 section
**❌ 错误写法**：
```mermaid
timeline
    1月 : 事件1
    2月 : 事件2
```

**✅ 正确写法**：
```mermaid
timeline
    section 2023
        1月 : 事件1
        2月 : 事件2
```

**原因**：所有事件必须归属于某个 `section`。

### 错误 3: 时间顺序混乱
**❌ 错误写法**：
```mermaid
timeline
    section 2023
        12月 : 事件1
        1月 : 事件2    %% 时间倒序
```

**✅ 正确写法**：
```mermaid
timeline
    section 2023
        1月 : 事件2
        12月 : 事件1
```

**原因**：事件应按时间顺序排列，从早到晚。

### 错误 4: 事件描述过长
**❌ 错误写法**：
```mermaid
timeline
    section 2023
        1月 : 公司正式成立并完成了工商注册、银行开户、团队招聘等一系列复杂的准备工作
```

**✅ 正确写法**：
```mermaid
timeline
    section 2023
        1月 : 公司成立
            : 完成工商注册
            : 团队组建完成
```

**原因**：单个事件描述应简洁，复杂内容拆分为多条事件。建议每条描述不超过 15 个汉字。

### 错误 5: 缺少 title
**❌ 错误写法**：
```mermaid
timeline
    section 2023
        1月 : 事件1
```

**✅ 正确写法**：
```mermaid
timeline
    title 公司发展历程
    section 2023
        1月 : 事件1
```

**原因**：虽然 `title` 在语法上是可选的，但建议始终添加标题，让时间线主题更清晰。

## 生成检查清单

- [ ] **图表声明正确**：使用 `timeline`
- [ ] **标题清晰**：使用 `title` 添加标题
- [ ] **分节合理**：使用 `section` 划分时间段
- [ ] **事件格式正确**：`时间 : 描述`
- [ ] **时间顺序正确**：按时间先后排列
- [ ] **描述简洁**：事件描述精炼
- [ ] **代码可渲染**：语法正确

**任何检查项不通过，立即修正后重新生成**
