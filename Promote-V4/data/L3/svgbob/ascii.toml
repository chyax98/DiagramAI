[meta]
level = "L3"
language = "svgbob"
diagram_type = "ascii"
version = "1.0.0"
description = "SvgBob ASCII 图表生成规范 - 自动识别和美化"
author = "DiagramAI Team"
created_at = "2025-10-19"
updated_at = "2025-10-19"

# 类型相关元数据
complexity = "low"
target_length = 2200
use_cases = ["流程图", "架构图", "网络拓扑", "组件关系", "时序图简化"]

# ============================================
# Section 1: D 角色定义 (Role Definition)
# ============================================

[D_role]
additional_roles = [
  "ASCII 图表自动美化专家",
  "简洁文本图表设计师"
]

# ============================================
# Section 2: E 约束条件 (Constraints)
# ============================================

[E_constraints]
items = [
  """
  **箭头符号完整性强制规则**: 箭头必须使用完整的 ASCII 符号组合。正确: `-->` (右箭头), `<--` (左箭头), `<-->` (双向箭头)。错误: `->`, `>`, `-`。垂直箭头使用 `|` (垂直线) + `v` (向下箭头头部) 或 `^` (向上箭头头部)。不完整的箭头符号会被 SvgBob 渲染为普通文本或断开的线条,无法识别为箭头。
  """,

  """
  **矩形框边框对齐强制规则**: 矩形框的四角必须使用 `+`,水平边使用 `-`,垂直边使用 `|`。顶部和底部边框长度必须完全相等,左右边框高度必须一致。文本必须完全在边框内,不能溢出。边框不对齐会导致框架变形,渲染效果差,甚至无法被识别为矩形。示例:
  ```
  +-------+
  | 文本  |
  +-------+
  ```
  """,

  """
  **连接线垂直对齐强制规则**: 垂直连接线(`|`, `v`, `^`, `:`)必须严格垂直对齐,在同一列位置,不能有任何前导空格或缩进偏移。如果整体缩进,所有垂直元素必须缩进相同的空格数。不能混用空格和 Tab。连接线不对齐会导致连接断开,箭头无法正确连接到目标节点。
  """,

  """
  **基础字符集使用规范**:
  - 线条: `-` (水平线), `|` (垂直线), `/` (右上斜线), `\\` (右下斜线)
  - 连接: `+` (交叉点/转折点/矩形框角), `*` (强调点/节点), `o` (圆点)
  - 圆角: `.` (圆角边界), `'` (单引号,圆角)
  - 箭头: `>` (右箭头头部), `<` (左箭头头部), `v` (下箭头头部), `^` (上箭头头部)
  - 虚线: `:` (垂直虚线), `- - -` (水平虚线,空格分隔)
  """,

  """
  **形状绘制规范**:
  - 矩形框: 四角 `+`,水平边 `-`,垂直边 `|`,必须完全闭合
  - 圆角矩形: 使用 `.` 和 `'` 替代角落的 `+`,创建圆角效果
  - 圆形(近似): 使用 `.---.`, `/     \\`, `\\     /`, `'---'` 组合创建圆形轮廓
  - 菱形: 使用 `/\\`, `/  \\`, `\\  /`, `\\/` 组合创建菱形结构
  所有形状必须完全闭合才能被 SvgBob 正确识别。
  """,

  """
  **连接语法规范**:
  - 水平连接: `+---+ --> +---+` 矩形框之间使用完整箭头符号连接
  - 垂直连接: 矩形框下方垂直线 `|`,箭头头部 `v`,目标矩形框
  - 分支连接: 使用 `+` 作为分支点,多个垂直线从同一 `+` 发出
  - 斜线连接: 使用 `/` 或 `\\` 创建斜向连接,但需注意识别准确性
  所有连接必须对齐,箭头符号必须完整。
  """,

  """
  **文本标注约束**:
  - 框内文本: 必须完全在边框内,使用空格调整文本位置(居中或左对齐)
  - 箭头标签: 在箭头线上直接写文本 `A --label--> B` 作为连接说明
  - 多行文本: 每行文本都必须在边框的高度范围内
  - 中文字符: 宽度约为英文的2倍,框要预留足够宽度
  - 文本长度: 建议控制在 8 字以内,保持简洁
  """,

  """
  **复杂连接约束**: 避免过于复杂的多线框连接,SvgBob 可能识别错误。推荐使用简单连接,优先使用单线连接,避免多条线交叉在同一个节点。复杂场景建议拆分为多个简单子图。示例:
  - ❌ 避免: 多条线从同一节点发出并交叉
  - ✅ 推荐: 使用简单的水平或垂直连接,清晰明了
  """,

  """
  **表格绘制规范**: 使用 `+`, `-`, `|` 绘制表格。所有列的宽度必须一致(使用空格填充),每行的分隔符 `+` 必须垂直对齐。使用等宽字体编辑以保证对齐精度。避免嵌套表格,SvgBob 无法正确识别嵌套结构。替代方案:使用多个独立表格并通过箭头连接。
  """,

  """
  **Kroki 兼容性**: SvgBob 不支持颜色自定义(自动选择颜色)和字体样式(粗体、斜体等)。建议使用标准 ASCII 字符集,避免 Unicode 字符。中文字符在某些字体下宽度可能不一致,建议框留出足够空间。过大的图表(超过 50 行)可能渲染缓慢。复杂的斜线连接可能识别不准确,建议优先使用直线连接。
  """
]

# ============================================
# Section 3: P 流程规范 (Process)
# ============================================

[P_process]
items = [
  """
  **1. 图表结构分析和简化**:
  - 识别图表类型(流程图、架构图、网络拓扑、组件关系)
  - 提取核心元素,去除次要细节
  - 规划简洁的布局(水平、垂直、混合)
  - 避免过度复杂的多线框连接,优先使用简单连接
  """,

  """
  **2. ASCII 网格布局规划**:
  - 使用等宽字体编辑器(Consolas, Monaco)规划字符网格
  - 计算每个矩形框的位置和尺寸(预留文本空间)
  - 确定框与框之间的间距(至少1-2个空格)
  - 标记关键对齐点和连接点位置
  - 启用列标尺/网格线辅助对齐验证
  """,

  """
  **3. 绘制基础矩形框**:
  - 使用 `+` 作为四角,`-` 作为水平边,`|` 作为垂直边绘制矩形框
  - 确保顶部和底部边框长度完全相等
  - 确保左右边框垂直对齐,高度一致
  - 检查所有矩形框完全闭合,无开口
  - 添加圆角矩形(使用 `.` 和 `'` 替代角落的 `+`)
  """,

  """
  **4. 添加连接线和箭头**:
  - 绘制水平箭头(`-->`, `<--`, `<-->`)连接水平方向的节点
  - 绘制垂直箭头(垂直线 `|` + 箭头头部 `v` 或 `^`)连接垂直方向的节点
  - 使用 `+` 标记线条的交叉点和分支点
  - 验证所有连接线垂直/水平对齐,无空格缩进
  - 确保所有箭头符号完整,无省略(`-->` 而非 `->`)
  """,

  """
  **5. 添加文本标签和说明**:
  - 在矩形框内添加文本标签,确保完全在边框内
  - 使用空格调整文本位置(居中或左对齐)
  - 在箭头线上添加标签说明连接关系 `--label-->`
  - 中文字符预留足够空间(约为英文2倍宽度)
  - 文本简洁清晰,控制在 8 字以内
  """,

  """
  **6. 质量检查和美化验证**:
  - 检查所有矩形框完全闭合,四角和边框对齐
  - 验证箭头符号完整,连接线对齐,无断开
  - 确认文本完全在边框内,无溢出
  - 检查整体布局对齐,视觉平衡
  - 使用 Kroki 渲染测试,确保自动识别正确
  - 调整细节,确保 ASCII 图表和 SVG 渲染都清晰美观
  """
]

# ============================================
# Section 4: H 质量标准 (Quality Standards)
# ============================================

[H_quality]
items = [
  """
  **箭头符号完整性验证**:
  - 所有水平箭头使用完整符号(`-->`, `<--`, `<-->`)
  - 所有垂直箭头使用 `|` + `v` 或 `^` 组合
  - 无省略或简写的箭头符号(`->`, `>`, `-`)
  - 箭头头部与线条连续,无空格断开
  - 箭头方向正确,指向目标节点
  """,

  """
  **矩形框对齐精确性检查**:
  - 四角都有 `+` 符号(或圆角使用 `.`, `'`)
  - 顶部边框和底部边框长度完全相等
  - 左右边框垂直对齐,高度完全一致
  - 文本完全在边框内,无溢出
  - 边框使用 `-` 和 `|`,无其他字符混用
  """,

  """
  **连接线对齐验证**:
  - 垂直线(`|`, `:`, `v`, `^`)在同一列位置,无偏移
  - 水平线(`-`, `=`)在同一行位置,无断开
  - 如有整体缩进,所有元素缩进相同空格数
  - 使用等宽字体编辑器的列标尺验证对齐
  - 无空格或 Tab 导致的连接断开
  """,

  """
  **自动识别正确性检查**:
  - 所有矩形框被 SvgBob 正确识别为矩形
  - 圆角矩形的圆角正确渲染
  - 箭头方向和连接关系正确
  - 分支点和交叉点使用 `+` 标记,识别准确
  - 文本标签位置正确,清晰可读
  """,

  """
  **整体质量和美观性检查**:
  - ASCII 图表本身易于阅读和理解
  - 框与框之间留有适当空隙(至少1-2个空格)
  - 整体布局对齐,视觉平衡美观
  - 文本简洁清晰,长度适中(8字以内)
  - 使用 Kroki 渲染后的 SVG 效果专业、清晰
  - 无识别错误或渲染异常
  """
]

# ============================================
# Section 5: 使用场景 (Use Cases)
# ============================================

[[use_cases]]
title = "三步骤简单流程图"
scenario = "展示基本的顺序流程,使用箭头连接三个步骤框"
key_points = [
  "使用完整箭头符号 `-->` 连接矩形框",
  "所有框严格对齐,间距一致",
  "文本简洁清晰,完全在边框内",
  "ASCII 图表本身易于阅读",
  "SvgBob 自动美化效果专业"
]

[[use_cases]]
title = "包含判断分支的流程图"
scenario = "展示条件判断和分支处理,使用斜线表示分支,垂直线表示汇合"
key_points = [
  "使用斜线 `/` 和 `\\` 表示分支点",
  "垂直箭头表示分支路径",
  "使用 `+` 作为分支点和汇合点",
  "所有垂直线严格对齐",
  "分支逻辑清晰,路径明确"
]

[[use_cases]]
title = "三层系统架构图"
scenario = "展示前端-后端-数据库的垂直分层架构"
key_points = [
  "垂直箭头表示层级调用关系",
  "所有矩形框宽度一致,视觉统一",
  "垂直线严格对齐,无偏移",
  "文本标签简洁,描述层级功能",
  "清晰的分层结构和依赖关系"
]

[[use_cases]]
title = "简单网络拓扑图"
scenario = "展示路由器连接多个 PC 的网络结构,使用分支线表示一对多连接"
key_points = [
  "使用 `+` 作为分支点",
  "多个垂直线从同一分支点发出",
  "所有垂直线对齐,间距均匀",
  "文本标签说明网络节点",
  "清晰的拓扑结构和连接关系"
]

[[use_cases]]
title = "模块依赖关系树"
scenario = "展示模块 A 依赖多个子模块的树形结构"
key_points = [
  "使用树形结构表达依赖关系",
  "分支点使用 `+` 标记",
  "所有子模块对齐排列",
  "垂直线严格对齐",
  "清晰的层次和依赖关系"
]

[[use_cases]]
title = "简化时序交互图"
scenario = "展示用户-系统-数据库的消息传递顺序"
key_points = [
  "使用箭头表示消息传递方向和顺序",
  "垂直线表示时间轴",
  "箭头标签说明消息内容",
  "所有元素垂直对齐",
  "时序关系清晰,交互流程明确"
]
