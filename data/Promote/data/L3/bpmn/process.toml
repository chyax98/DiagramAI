# ============================================
# L3 类型层 - BPMN Process Diagram (流程图)
# ============================================

[meta]
level = "L3"
language = "bpmn"
diagram_type = "process"
version = "1.0.0"
description = "L3: BPMN 流程图生成规范"
author = "DiagramAI Team"
created_at = "2025-10-19"
updated_at = "2025-10-19"

# 类型相关元数据
complexity = "high"
target_length = 3500
use_cases = ["业务流程文档化", "流程优化分析", "自动化实施", "跨部门协作", "合规性审计"]

# ============================================
# Section 1: D 角色定义
# ============================================

[D_role]
additional_roles = [
  "业务流程建模专家",
  "BPMN 流程图设计师",
  "流程自动化工程师"
]

# ============================================
# Section 2: E 约束条件
# ============================================

[E_constraints]
items = [
  """
  **流程图类型声明**: 必须在 `<process>` 元素中明确 `isExecutable="false"` 属性（文档化流程）或 `isExecutable="true"`（可执行流程）。默认使用 `false`。
  """,

  """
  **开始事件类型选择**: 根据流程触发条件选择合适的开始事件类型:
  - None Start Event: 手动启动或其他流程调用
  - Message Start Event: 收到消息后启动
  - Timer Start Event: 定时启动（如每日凌晨）
  - Signal Start Event: 收到广播信号启动
  确保开始事件无 incoming flow，有至少一个 outgoing flow。
  """,

  """
  **任务类型精确性**: 根据任务执行方式选择正确的任务类型:
  - `<task>`: 通用任务，执行方式不明确
  - `<userTask>`: 需要人工参与的任务（如审批、填写表单）
  - `<serviceTask>`: 自动化任务，由系统执行（如调用 API、发送邮件）
  - `<scriptTask>`: 执行脚本代码（需指定 `scriptFormat` 和 `<script>` 内容）
  - `<sendTask>` / `<receiveTask>`: 发送/接收消息
  - `<manualTask>`: 系统外的手动操作（如现场检查）
  - `<businessRuleTask>`: 执行业务规则（如信用评分）
  """,

  """
  **网关类型选择与使用规则**:
  - 排他网关（Exclusive XOR）: "二选一"或"多选一"决策，必须有 `default` 默认流和 `<conditionExpression>`
  - 并行网关（Parallel AND）: 所有路径同时执行，必须成对使用（分支 + 汇聚），不需要条件表达式
  - 包容网关（Inclusive OR）: 一个或多个路径，必须有 `default` 和条件表达式，汇聚时等待所有被激活的分支
  - 事件网关（Event-Based）: 等待事件，第一个到达的事件决定路径，outgoing flow 必须指向 Intermediate Catch Event 或 Receive Task
  """,

  """
  **结束事件类型选择**: 根据流程终止方式选择合适的结束事件类型:
  - None End Event: 正常结束
  - Message End Event: 发送消息后结束
  - Error End Event: 抛出错误
  - Terminate End Event: 强制终止所有活动路径
  确保结束事件有至少一个 incoming flow，无 outgoing flow。
  """,

  """
  **条件表达式规范**: 所有排他网关和包容网关的分支（除默认流外）必须有条件表达式:
  - 必须指定 `xsi:type="tFormalExpression"` 属性
  - 使用 XML 实体编码特殊字符（`<` → `&lt;`, `>` → `&gt;`, `&` → `&amp;`）
  - 表达式语法推荐使用 JUEL（如 `\\${amount &gt; 1000}`）
  - 条件必须覆盖所有可能情况，避免流程卡住
  """,

  """
  **泳道使用规范**:
  - 当流程涉及多个参与者（部门、角色）时，必须使用 Lane 划分职责
  - Lane 必须在 LaneSet 中定义，使用 `<flowNodeRef>` 指定包含的节点
  - Lane 名称应清晰表达角色职责（如 "销售部"、"财务审批人"、"IT 支持"）
  - 如果涉及跨组织流程，使用 Pool 和 Message Flow
  """,

  """
  **子流程使用规范**:
  - 当主流程超过 15 个元素时，考虑拆分为子流程
  - 子流程内部有独立的开始和结束事件
  - 子流程嵌套深度不超过 3 层（Level 1: 主流程，Level 2: 子流程，Level 3: 嵌套子流程）
  - 超过 3 层嵌套改用调用活动（Call Activity）
  """,

  """
  **边界事件使用规范**:
  - 边界事件必须用 `attachedToRef` 附加到 Task 或 SubProcess
  - 超时控制使用 Timer Boundary Event（指定 `<timeDuration>` 或 `<timeCycle>`）
  - 错误处理使用 Error Boundary Event（配合 Error End Event）
  - `cancelActivity="true"` 表示中断活动，`cancelActivity="false"` 表示非中断型（并行执行）
  - 边界事件不能有 incoming sequence flow
  """,

  """
  **流程复杂度控制**:
  - 单个流程元素数量不超过 20 个（超过则拆分子流程）
  - 单个网关的分支数量不超过 5 个（过多分支使用包容网关或重构逻辑）
  - 流程路径深度不超过 10 层（避免过长的顺序链）
  - 避免过度嵌套和循环依赖
  """
]

# ============================================
# Section 3: P 流程规范
# ============================================

[P_process]
items = [
  """
  **1. 流程要素识别**:
  - 起点: 流程的触发条件或开始动作（选择合适的开始事件类型）
  - 终点: 流程的结束状态（成功、失败、取消等，选择合适的结束事件类型）
  - 关键步骤: 核心操作节点（选择合适的任务类型：User、Service、Script 等）
  - 决策点: 需要判断和分支的地方（选择合适的网关类型：Exclusive、Parallel、Inclusive）
  - 异常处理: 错误情况的处理路径（使用边界事件和异常流）
  """,

  """
  **2. 流程逻辑提取**:
  - 主流程: 正常情况下的标准流程路径（快乐路径 Happy Path）
  - 分支流程: 基于条件判断的不同路径（使用排他或包容网关）
  - 并行流程: 可以同时执行的任务（使用并行网关分支和汇聚）
  - 异常流程: 错误、失败、超时等异常情况的处理（使用边界事件）
  - 循环流程: 需要重复执行的步骤（使用反向连接，确保有退出条件）
  """,

  """
  **3. XML 结构构建**:
  - 创建完整的 XML 声明和 BPMN 2.0 命名空间
  - 在 `<definitions>` 中创建 `<process>` 元素
  - 定义所有流程元素（事件、任务、网关），分配全局唯一 ID
  - 定义 `<sequenceFlow>` 连接元素，确保 sourceRef 和 targetRef 精确匹配
  - 如果涉及多参与者，定义 LaneSet 和 Lane
  - 为网关添加条件表达式（使用 XML 实体编码）
  - 为边界事件指定附加目标和类型
  """,

  """
  **4. ID 命名与中文标注**:
  - ID 命名规则: 使用英文前缀 + 描述 + 序号（如 `StartEvent_1`, `Task_Submit`, `Gateway_Amount`）
  - 中文标注: 使用 `name` 属性添加中文描述（如 `name="提交申请"`, `name="金额检查"`）
  - 任务名称使用动宾结构（如 "审批订单"、"发送邮件"、"计算价格"）
  - 网关名称清晰表达判断条件（如 "金额检查"、"库存判断"）
  - 顺序流标签说明分支逻辑（如 `name="审批通过"`, `name="金额 > 1000"`）
  """,

  """
  **5. 完整性与质量检查**:
  - 验证 XML 语法正确性（标签闭合、属性引号、实体编码）
  - 验证元素 ID 全局唯一性
  - 验证顺序流连接精确性（sourceRef/targetRef 匹配）
  - 验证开始和结束事件规则
  - 验证网关条件完整性（default + conditionExpression）
  - 验证边界事件附加正确性
  - 验证所有流程路径都有明确终点，无悬空节点
  - 确保流程能被 Kroki 成功渲染
  """
]

# ============================================
# Section 4: H 质量标准
# ============================================

[H_quality]
items = [
  """
  **BPMN 2.0 规范符合性**:
  - 完整的 XML 声明和命名空间定义
  - 元素 ID 全局唯一且语义化
  - 顺序流连接精确无误
  - 开始和结束事件规则正确
  - 网关类型选择正确，条件完整
  - 边界事件正确附加
  - 泳道结构规范
  """,

  """
  **流程逻辑完整性**:
  - 所有流程路径都有明确终点（结束事件）
  - 决策网关的所有分支都有处理（包括默认路径）
  - 并行网关成对使用（分支 + 汇聚）
  - 异常处理路径完整（边界事件 + 异常流）
  - 循环逻辑有明确的退出条件
  - 无悬空节点或断裂路径
  """,

  """
  **业务语义清晰性**:
  - 任务名称使用动宾结构，清晰表达操作（如 "审批订单"、"发送邮件"）
  - 网关名称清晰表达判断条件（如 "金额检查"、"库存判断"）
  - 顺序流标签说明分支逻辑（如 "审批通过"、"金额 > 1000"）
  - 泳道名称明确表达角色职责（如 "销售部"、"财务审批人"）
  - 使用中文业务术语，便于非技术人员理解
  """,

  """
  **流程可读性与可维护性**:
  - 单个流程元素数量不超过 20 个
  - 复杂流程使用子流程拆分
  - 泳道合理划分职责边界
  - 布局清晰，连接线尽量不交叉
  - 关键路径突出显示
  - 异常处理路径完整覆盖
  """,

  """
  **Kroki 渲染质量**:
  - 生成的 BPMN XML 能被 Kroki 成功渲染为 SVG 图像
  - 无渲染错误或警告
  - 图形布局清晰，节点和连接线无重叠
  - 文本标签清晰易读
  - 视觉层（BPMNDiagram）可选，Kroki 可自动布局
  """
]

# ============================================
# Section 5: 使用场景
# ============================================

[[use_cases]]
title = "订单审批流程"
scenario = "电商平台的订单审批流程，根据订单金额自动审批或人工审批"
key_points = [
  "使用排他网关根据金额判断审批方式（< 1000元自动，>= 1000元人工）",
  "使用泳道区分销售部和财务部的职责",
  "使用边界事件处理审批超时情况",
  "使用 Message End Event 发送审批通知"
]

[[use_cases]]
title = "员工入职流程"
scenario = "公司员工入职流程，涉及多个部门协作（HR、IT、行政）"
key_points = [
  "使用并行网关同时执行 IT 账号创建、行政物资准备、HR 培训安排",
  "使用泳道区分 HR、IT、行政部门的职责",
  "使用子流程封装复杂的培训流程",
  "使用 Timer Boundary Event 处理培训超时"
]

[[use_cases]]
title = "客户投诉处理流程"
scenario = "客户服务中心的投诉处理流程，包含升级机制"
key_points = [
  "使用排他网关根据投诉严重程度选择处理方式",
  "使用 Timer Boundary Event 实现 24 小时未处理自动升级",
  "使用 Error Boundary Event 处理处理失败的情况",
  "使用包容网关同时发送邮件和短信通知"
]
